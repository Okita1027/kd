import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as t,o as e}from"./app-CBhQlLrf.js";const n={};function l(h,s){return e(),a("div",null,s[0]||(s[0]=[t(`<h2 id="razor" tabindex="-1"><a class="header-anchor" href="#razor"><span>Razor</span></a></h2><table><thead><tr><th style="text-align:center;">特性</th><th style="text-align:center;">Razor Pages</th><th style="text-align:center;">MVC</th><th style="text-align:center;">Blazor</th></tr></thead><tbody><tr><td style="text-align:center;"><strong>定义</strong></td><td style="text-align:center;">页面驱动的 Web 框架，使用 Razor 语法</td><td style="text-align:center;">控制器驱动的 MVC 架构，使用 Razor 视图</td><td style="text-align:center;">组件驱动的 Web 框架，使用 Razor 组件</td></tr><tr><td style="text-align:center;"><strong>文件类型</strong></td><td style="text-align:center;"><code>.cshtml</code> (PageModel + 视图)</td><td style="text-align:center;"><code>.cshtml</code> (视图) + 控制器</td><td style="text-align:center;"><code>.razor</code> (组件)</td></tr><tr><td style="text-align:center;"><strong>开发模型</strong></td><td style="text-align:center;">页面为中心，逻辑在 PageModel 中</td><td style="text-align:center;">控制器为中心，分离 Model、View、Controller</td><td style="text-align:center;">组件为中心，逻辑在 <code>@code</code> 块中</td></tr><tr><td style="text-align:center;"><strong>请求处理</strong></td><td style="text-align:center;"><code>OnGet</code>, <code>OnPost</code> 等方法，<code>[HttpPost]</code></td><td style="text-align:center;">控制器动作，<code>[HttpPost]</code></td><td style="text-align:center;">事件驱动（如 <code>@onclick</code>），HTTP 或 SignalR</td></tr><tr><td style="text-align:center;"><strong>适用场景</strong></td><td style="text-align:center;">简单、页面驱动的 CRUD 应用</td><td style="text-align:center;">复杂、模块化的 Web 应用或 API</td><td style="text-align:center;">交互式、现代 SPA 或实时应用</td></tr><tr><td style="text-align:center;"><strong>复杂性</strong></td><td style="text-align:center;">简单，适合中小型项目</td><td style="text-align:center;">较复杂，适合大型项目</td><td style="text-align:center;">中等，适合交互式 UI</td></tr><tr><td style="text-align:center;"><strong>客户端交互</strong></td><td style="text-align:center;">依赖 JavaScript（如验证脚本）</td><td style="text-align:center;">依赖 JavaScript</td><td style="text-align:center;">全 C# 开发，减少 JavaScript 依赖</td></tr><tr><td style="text-align:center;"><strong>XSRF 防护</strong></td><td style="text-align:center;">内置，<code>@Html.AntiForgeryToken()</code></td><td style="text-align:center;">内置，<code>[ValidateAntiForgeryToken]</code></td><td style="text-align:center;">Blazor Server 内置，WebAssembly 需配置</td></tr><tr><td style="text-align:center;"><strong>性能</strong></td><td style="text-align:center;">服务器渲染，快速开发</td><td style="text-align:center;">服务器渲染，适合复杂逻辑</td><td style="text-align:center;">Server 实时，WebAssembly 客户端执行</td></tr></tbody></table><h3 id="概述" tabindex="-1"><a class="header-anchor" href="#概述"><span>概述</span></a></h3><p><strong>定义</strong></p><ul><li><strong>Razor</strong> 是一种标记语法，用于将服务器端 C# 代码嵌入到网页中。它允许您在 HTML 内部编写 C# 代码，以便动态生成网页内容。Razor 语法简洁、易读，旨在提高 Web 开发效率。</li></ul><p><strong>作用</strong></p><ul><li><strong>HTML 与 C# 混合：</strong> Razor 最核心的作用就是将 HTML 标记与 C# 代码无缝结合。您可以在同一个文件中编写静态 HTML 结构，并在需要时插入 C# 代码来处理数据、实现逻辑等。</li><li><strong>动态内容生成：</strong> 用于生成动态的 Web 内容，例如显示来自数据库的数据、根据用户输入改变页面布局、条件性地渲染 HTML 元素等。</li><li><strong>视图引擎：</strong> 在 ASP.NET Core MVC 和 Razor Pages 中，Razor 充当视图引擎的角色。它负责解析 <code>.cshtml</code> 文件，将其中的 C# 代码编译并执行，最终生成发送到客户端的纯 HTML。</li></ul><h3 id="语法" tabindex="-1"><a class="header-anchor" href="#语法"><span>语法</span></a></h3><ol><li><p><strong>代码块与表达式</strong></p><ul><li><strong>代码块 (<code>@{ ... }</code>)：</strong> 用于编写多行 C# 代码，例如定义变量、循环、条件语句等。代码块中的内容不会直接输出到 HTML 中，除非明确使用 <code>@</code> 符号输出。</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;Hello, Razor!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">    ViewData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Title&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] </span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;我的 Razor 页面&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">@message</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><strong>显式表达式 (<code>@(...)</code>)：</strong> 用于计算并输出单个 C# 表达式的值。</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">当前年份</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: @(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">DateTime</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Now</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Year</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>隐式表达式 (<code>@variableName</code>)：</strong> <em>最常见的用法</em>，直接在 <code>@</code> 后面跟一个 C# 变量、属性或方法调用，其结果会被渲染到 HTML 中。</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">欢迎</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">，</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">@Model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">UserName</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">！</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p><strong>控制流语句</strong></p><p>Razor 支持 C# 中的所有标准控制流语句，如 <code>if/else</code>、<code>for</code>、<code>foreach</code>、<code>while</code>、<code>switch</code> 等，它们通常嵌套在 Razor 代码块中。</p><ul><li><p>条件渲染 (<code>@if</code>, <code>@else</code>, <code>@else if</code>)：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">@if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">IsAdmin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">欢迎管理员</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">！</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">欢迎普通用户</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">！</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>循环渲染 (<code>@for</code>, <code>@foreach</code>)：</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ul</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    @foreach</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> item</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> in</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> Model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Items</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    {</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">        &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">li</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">@item</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">li</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">ul</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>指令与模型绑定数据访问</strong></p><ul><li><p><strong><code>@page</code>:</strong> 该指令将文件转换为一个 MVC 操作，这意味着它可以处理请求。 <code>@page</code> 必须是页面上的第一个 Razor 指令。</p></li><li><p><strong><code>@model</code>：</strong> 在 Razor 视图文件的顶部，使用 <code>@model</code> 指令声明视图所使用的模型类型。这样您就可以在视图中强类型地访问模型数据。</p><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">@model</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> MyWebApp</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Models</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Product</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">产品名称</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">@Model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">Name</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">h1</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">价格</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">@Model</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Price</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ToString</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;C&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p><strong><code>ViewData</code> 和 <code>ViewBag</code>：</strong> 用于在控制器和视图之间传递少量非强类型数据。</p><ul><li><strong><code>ViewData</code>：</strong> 基于字典的强类型集合。</li><li><strong><code>ViewBag</code>：</strong> 动态类型，是 <code>ViewData</code> 的一个包装。</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">@{</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> pageTitle</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> ViewData</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Title&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">];</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">@pageTitle</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">h2</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p><strong>布局页面 (<code>_Layout.cshtml</code>)</strong></p><ul><li><strong>作用：</strong> 布局页面定义了网站的通用结构（如头部、导航栏、页脚）。所有视图都可以引用一个布局页面，以避免重复编写通用 HTML。</li><li><strong><code>@RenderBody()</code>：</strong> 布局页面中的占位符，表示子视图内容的渲染位置。</li><li><strong><code>@RenderSection(&quot;SectionName&quot;, required: false)</code>：</strong> 用于定义可选或必需的内容节。子视图可以使用 <code>@section SectionName { ... }</code> 来填充这些节。</li></ul></li><li><p><strong>分部视图 (<code>_PartialView.cshtml</code>)</strong></p><ul><li><strong>作用：</strong> 分部视图是可重用的 Razor 标记块，用于在多个视图中包含通用 UI 组件，例如评论列表、产品卡片等。</li><li><strong>渲染方式：</strong><ul><li><code>@Html.Partial(&quot;_PartialViewName&quot;, model)</code></li><li><code>@await Html.PartialAsync(&quot;_PartialViewName&quot;, model)</code> (推荐异步版本)</li><li><code>@await Component.InvokeAsync(&quot;ComponentName&quot;, arguments)</code> (推荐用于更复杂的、带有逻辑的分部视图，称为 View Component)</li></ul></li></ul></li><li><p><strong>Tag Helpers</strong></p></li></ol><p><strong>Tag Helpers</strong> 是 .NET Core 中引入的一项强大功能，它允许服务器端代码以 HTML 元素的属性形式参与到 Razor 文件中，使 Razor 标记更接近于纯 HTML，提高可读性。</p><ul><li><p><strong>优势：</strong></p><ul><li>增强了 HTML 元素的行为。</li><li>与 HTML 语法更自然地融合。</li><li>IDE 支持更好（IntelliSense）。</li></ul></li><li><p><strong>常见 Tag Helpers：</strong></p><ul><li><strong>表单 (<code>asp-for</code>, <code>asp-validation-for</code>, <code>asp-summary</code>, <code>asp-action</code>, <code>asp-controller</code>)：</strong> 简化表单的创建和验证。</li><li><strong>图像 (<code>asp-append-version</code>)：</strong> 用于缓存破坏。</li><li><strong>链接 (<code>asp-area</code>, <code>asp-controller</code>, <code>asp-action</code>, <code>asp-route-\\*</code>)：</strong> 帮助生成正确的 URL。</li><li><strong>环境 (<code>asp-environment</code>)：</strong> 根据环境条件渲染内容。</li><li><strong>脚本和样式 (<code>asp-src-include</code>, <code>asp-src-exclude</code>, <code>asp-append-version</code>)：</strong> 方便管理静态文件。</li></ul><div class="language-c# line-numbers-mode" data-highlighter="shiki" data-ext="c#" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-c#"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> asp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">controller</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Home&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> asp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">action</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Submit&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> asp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">label</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">input</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> asp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;form-control&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> asp</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">validation</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">-</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">for</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> class</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;text-danger&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">span</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">    &lt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> type</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;submit&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">提交</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">button</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&lt;/</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">form</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><ol start="7"><li><strong>View Components</strong></li></ol><p><strong>View Components</strong> 是一种更强大的分部视图替代方案，特别适合具有独立逻辑和数据的可重用 UI 块。它们类似于迷你版的 MVC 控制器和视图的组合。</p><ul><li><strong>特点：</strong><ul><li>独立于控制器，拥有自己的逻辑。</li><li>可以接受参数。</li><li>支持异步操作。</li></ul></li><li><strong>使用场景：</strong> 购物车摘要、最近发布的文章列表、动态导航菜单等。</li></ul><h3 id="razor-pages-与-mvc-中的-razor" tabindex="-1"><a class="header-anchor" href="#razor-pages-与-mvc-中的-razor"><span>Razor Pages 与 MVC 中的 Razor</span></a></h3><p><strong>MVC：</strong> Razor 主要用作视图层，与控制器和模型协同工作，遵循 <code>M-V-C</code> 模式。每个视图通常对应一个控制器动作。</p><p><strong>Razor Pages：</strong> Razor Pages 是一种更简单的、页面为中心的开发模型，特别适合较小的、不那么复杂的 Web 应用程序。每个 <code>.cshtml</code> 文件通常都有一个对应的 <code>.cshtml.cs</code> 后端代码文件（称为 &quot;code-behind&quot;），其中包含页面逻辑。Razor Pages 简化了文件组织和路由。</p><h2 id="mvc" tabindex="-1"><a class="header-anchor" href="#mvc"><span>MVC</span></a></h2><h2 id="blazor" tabindex="-1"><a class="header-anchor" href="#blazor"><span>Blazor</span></a></h2><h2 id="客户端开发" tabindex="-1"><a class="header-anchor" href="#客户端开发"><span>客户端开发</span></a></h2><h2 id="会话和状态管理" tabindex="-1"><a class="header-anchor" href="#会话和状态管理"><span>会话和状态管理</span></a></h2><h2 id="布局" tabindex="-1"><a class="header-anchor" href="#布局"><span>布局</span></a></h2><h2 id="razor语法" tabindex="-1"><a class="header-anchor" href="#razor语法"><span>Razor语法</span></a></h2><h2 id="razor类库" tabindex="-1"><a class="header-anchor" href="#razor类库"><span>Razor类库</span></a></h2><h2 id="标记帮助程序" tabindex="-1"><a class="header-anchor" href="#标记帮助程序"><span>标记帮助程序</span></a></h2><h2 id="高级" tabindex="-1"><a class="header-anchor" href="#高级"><span>高级</span></a></h2>`,26)]))}const d=i(n,[["render",l]]),p=JSON.parse('{"path":"/dotnet/dotnet%20core/web%20application.html","title":"Web应用","lang":"zh-CN","frontmatter":{"title":"Web应用","shortTitle":"Web应用","description":"Web应用","date":"2025-07-12T11:08:18.000Z","categories":[".NET",".NET CORE"],"tags":[".NET"],"order":3},"git":{"createdTime":1752290312000,"updatedTime":1752311639000,"contributors":[{"name":"Okita1027","username":"Okita1027","email":"96156298+Okita1027@users.noreply.github.com","commits":2,"url":"https://github.com/Okita1027"}]},"readingTime":{"minutes":5.43,"words":1628},"filePathRelative":"dotnet/dotnet core/web application.md"}');export{d as comp,p as data};
