import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as e,o as n}from"./app-CBhQlLrf.js";const t={};function l(h,s){return n(),a("div",null,s[0]||(s[0]=[e(`<table><thead><tr><th>标识</th><th>类型</th><th>作用</th></tr></thead><tbody><tr><td><code>x:Class</code></td><td>指令</td><td>绑定 XAML 与 code-behind 类</td></tr><tr><td><code>x:Name</code></td><td>指令</td><td>注册 Element 的 name 到 namescope</td></tr><tr><td><code>x:Key</code></td><td>指令</td><td>ResourceDictionary 的键</td></tr><tr><td><code>x:FieldModifier</code></td><td>指令</td><td>修改生成字段的访问级别</td></tr><tr><td><code>x:Uid</code></td><td>指令</td><td>本地化标识</td></tr><tr><td><code>{x:Static ...}</code></td><td>标记扩展</td><td>引用静态成员</td></tr><tr><td><code>{x:Type ...}</code></td><td>标记扩展</td><td>获取 Type 对象</td></tr><tr><td><code>{x:Null}</code></td><td>标记扩展</td><td>表示 null</td></tr><tr><td><code>{x:Reference ...}</code></td><td>标记扩展</td><td>引用已命名元素实例</td></tr><tr><td><code>x:Shared</code></td><td>属性</td><td>控制资源是否共享实例</td></tr></tbody></table><h2 id="基础语法" tabindex="-1"><a class="header-anchor" href="#基础语法"><span>基础语法</span></a></h2><p>XAML 是 <strong>XML 的一种专用变体</strong>，用来描述 <strong>WPF UI 的结构、外观和行为</strong>。</p><p>它本质是 <strong>UI 声明语言</strong>，由 .NET 的编译器解析，转化为 C# 对象。</p><h3 id="元素" tabindex="-1"><a class="header-anchor" href="#元素"><span>元素</span></a></h3><p>每个 XAML 元素对应一个 <strong>.NET 类实例</strong></p><p>标签名 = 类名（必须有无参构造）</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;点我&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;30&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>等价于：</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cs"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> btn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Content</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;点我&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="嵌套元素" tabindex="-1"><a class="header-anchor" href="#嵌套元素"><span>嵌套元素</span></a></h3><p>如果属性类型是一个对象，可以用嵌套语法：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;40&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button.Background</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">SolidColorBrush</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Color</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Red&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button.Background</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>等价于：</p><div class="language-cs line-numbers-mode" data-highlighter="shiki" data-ext="cs" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-cs"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">var</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> btn</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">();</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Width</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Height</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 40</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">btn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Background</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> new </span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">SolidColorBrush</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Colors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">Red</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="属性元素" tabindex="-1"><a class="header-anchor" href="#属性元素"><span>属性元素</span></a></h3><p>把属性写成子标签，可以写更复杂的值</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button.Content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StackPanel</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Orientation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Horizontal&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Image</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;icon.png&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;16&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;登录&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StackPanel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button.Content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="命名空间" tabindex="-1"><a class="header-anchor" href="#命名空间"><span>命名空间</span></a></h3><p>XAML 文件开头会声明 XML 命名空间</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">    xmlns:x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>xmlns</code> 默认是 WPF 控件库的命名空间</li><li><code>xmlns:x</code> 是 XAML 语言关键字命名空间（<code>x:Name</code>、<code>x:Key</code>、<code>x:Type</code> 等）</li></ul><h3 id="标记扩展" tabindex="-1"><a class="header-anchor" href="#标记扩展"><span>标记扩展</span></a></h3><p>用 <code>{}</code> 包裹的特殊语法，用于动态赋值</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{Binding UserName}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{StaticResource MyButtonStyle}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Image</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Source</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{Binding ProfileImage, Converter={StaticResource ImageConverter}}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>常见扩展：</p><ul><li><code>{Binding}</code> → 数据绑定</li><li><code>{StaticResource}</code> / <code>{DynamicResource}</code> → 资源引用</li><li><code>{x:Static}</code> → 静态字段或属性</li><li><code>{x:Type}</code> → 类型引用</li></ul><h2 id="x名称空间" tabindex="-1"><a class="header-anchor" href="#x名称空间"><span>x名称空间</span></a></h2><p>在 XAML 中 <code>xmlns</code> 用来把 XML 前缀（如 <code>x:</code>、<code>local:</code>）映射到一个命名空间 URI 或 CLR 命名空间，从而告诉 XAML 解析器该前缀下的标签或标记扩展代表什么含义或类型。</p><p>最常见的三类命名空间：</p><ul><li><code>xmlns=&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</code> → WPF 的显示控件/类型（Button、Grid……），通常没有前缀（默认命名空间）。</li><li><code>xmlns:x=&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</code> → <strong>XAML 语言命名空间（简称 x:）</strong>，包含 XAML 语言级别的关键字 / 标记扩展（<code>x:Name</code> / <code>x:Class</code> / <code>x:Key</code> / <code>{x:Static}</code> 等）。</li><li><code>xmlns:local=&quot;clr-namespace:MyApp.Views;assembly=MyApp&quot;</code> → 把 <code>local:</code> 映射到你的 CLR 命名空间（用于引用你自己写的控件/类）。</li></ul><hr><p><code>x:</code></p><p><code>x:</code> 命名空间由 URI <code>http://schemas.microsoft.com/winfx/2006/xaml</code> 表示。 它不是控件集合，而是 <strong>XAML 语言本身提供的一组关键字和标记扩展</strong>，用于控制类生成、命名、引用静态成员、处理 null、类型对象等。</p><p><code>x:</code> 的关键词和标记扩展在所有基于 XAML 的平台（WPF/UWP/MAUI 等）中都非常相似且稳定，是 XAML 语法的核心部分。</p><h2 id="x-指令" tabindex="-1"><a class="header-anchor" href="#x-指令"><span>x:指令</span></a></h2><h3 id="x-class" tabindex="-1"><a class="header-anchor" href="#x-class"><span>x:Class</span></a></h3><p><strong>用途</strong>：声明 XAML 对应的生成类（把 XAML 与 code-behind 关联）。</p><p><strong>位置</strong>：通常写在根元素 <code>&lt;Window&gt;</code> / <code>&lt;UserControl&gt;</code> 的属性中。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MyApp.MainWindow&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        ...&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>x:Class</code> 会让编译器生成部分类（partial class），其命名空间/类名须与后台 <code>.xaml.cs</code> 中一致。</p></blockquote><h3 id="x-name" tabindex="-1"><a class="header-anchor" href="#x-name"><span>x:Name</span></a></h3><p><strong>用途</strong>：给元素在 XAML 中命名，注册到 NameScope，可在后台代码通过字段/变量直接访问；也可作为 <code>{Binding ElementName=...}</code> 的目标。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBox</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;txtUser&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>[!NOTE]</p><p>与 <code>Name</code> 属性的区别：很多控件也有 <code>Name</code>（CLR/DP 属性），<code>x:Name</code> 更通用（可用于不拥有 <code>Name</code> 属性的对象），且明确注册到 XAML 的 namescope。</p><p>在模板 / DataTemplate / ResourceDictionary 中，<code>x:Name</code> 的 namescope 不在窗体的 namescope 下（会导致 <code>FindName</code> 不一定找到），这是常见陷阱。</p></blockquote><h3 id="x-key" tabindex="-1"><a class="header-anchor" href="#x-key"><span>x:Key</span></a></h3><p><strong>用途</strong>：给资源字典里的资源指定键（用于 <code>{StaticResource x:Key}</code>）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window.Resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Style</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;PrimaryButtonStyle&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> TargetType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Button&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;...&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Style</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window.Resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>x:Key</code> 与 <code>x:Name</code>不同：<code>x:Key</code> 是资源字典的标识符，而不是 UI 命名。</p></blockquote><h3 id="x-fieldmodifier" tabindex="-1"><a class="header-anchor" href="#x-fieldmodifier"><span>x:FieldModifier</span></a></h3><p><strong>用途</strong>：控制由 XAML 生成的字段的可见性（默认是 <code>private</code>）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;btnSave&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:FieldModifier</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;public&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>[!TIP]</p><p>谨慎使用（改变访问级别会影响封装），仅在需要从其他类直接访问该字段时改用 <code>internal</code>/<code>public</code>。</p></blockquote><h3 id="x-uid" tabindex="-1"><a class="header-anchor" href="#x-uid"><span>x:Uid</span></a></h3><p><strong>用途</strong>：辅助本地化 / L10N：用于生成 Uid-&gt;资源键，便于使用 LocBAML 或其它本地化工具。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Uid</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MainWindow_Welcome&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Hello&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="x-shared" tabindex="-1"><a class="header-anchor" href="#x-shared"><span>x:shared</span></a></h3><p><strong>用途</strong>：用于资源字典，控制资源是单实例共享（<code>True</code>，默认）还是每次请求都新建（<code>False</code>）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">BitmapImage</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;MyImg&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Shared</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;False&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ... /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>[!note]</p><p><code>x:Shared=&quot;False&quot;</code> 会在每次 <code>StaticResource</code>/<code>DynamicResource</code> 请求时创建一个新实例（对不可重用、不可冻结的对象有用）。</p><p>并非所有 XAML 平台/上下文都支持 <code>x:Shared</code>，但 WPF 的资源字典支持。</p></blockquote><h2 id="标记扩展-1" tabindex="-1"><a class="header-anchor" href="#标记扩展-1"><span>标记扩展</span></a></h2><h3 id="x-array" tabindex="-1"><a class="header-anchor" href="#x-array"><span>x:Array</span></a></h3><p><strong>常见用途：</strong></p><ol><li><strong>给 ItemsControl（如 ListBox、ComboBox）提供静态数据源</strong></li><li><strong>作为资源存储一组默认值</strong>（如默认颜色、坐标集）</li><li><strong>构造不可变的数据集合</strong>（因为数组长度固定）</li></ol><p><strong>注意事项：</strong></p><ol><li><strong>数组是固定长度</strong>，不能像 <code>ObservableCollection</code> 一样动态增删项。</li><li><code>Type</code> 必须是<strong>可在 XAML 中创建的类型</strong>（必须有无参构造，值类型例外）。</li><li><code>x:Array</code> 只能创建 <strong>一维数组</strong>。</li></ol><h4 id="基本用法" tabindex="-1"><a class="header-anchor" href="#基本用法"><span>基本用法</span></a></h4><p>**用途：**在 XAML 这种标记语言里，数组本身不是天然可表示的，但 <code>x:Array</code> 提供了一个桥梁，让你能在布局或资源里声明一段数组数据。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Class</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;WpfApp.MainWindow&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        xmlns</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/winfx/2006/xaml/presentation&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        xmlns:x</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;http://schemas.microsoft.com/winfx/2006/xaml&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">        Title</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;x:Array 示例&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Height</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;200&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Width</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;300&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window.Resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        &lt;!-- 声明一个 string 类型的数组 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x:Array</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;CityList&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Type sys:String}&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">                 xmlns:sys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;clr-namespace:System;assembly=mscorlib&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;上海&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;北京&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;广州&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">            &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;深圳&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:String</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x:Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window.Resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StackPanel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ListBox</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> ItemsSource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{StaticResource CityList}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">StackPanel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>x:Array</code> 表示这是一个数组容器。</li><li><code>Type=&quot;{x:Type sys:String}&quot;</code> 表示数组的元素类型（必须指定）。</li><li><code>xmlns:sys=&quot;clr-namespace:System;assembly=mscorlib&quot;</code> 是为了访问 <code>System.String</code> 类型所在的命名空间。</li><li>数组中的每个元素用对应类型的标签（如 <code>sys:String</code>）来定义。</li></ol><h4 id="复杂类型" tabindex="-1"><a class="header-anchor" href="#复杂类型"><span>复杂类型</span></a></h4><p><code>x:Array</code> 不止能存储字符串，还能存储自定义类对象。例如存储 <code>Point</code> 数组：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window.Resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x:Array</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Key</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;PointsArray&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Type</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Type sys:Point}&quot;</span></span>
<span class="line"><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">             xmlns:sys</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;clr-namespace:System;assembly=WindowsBase&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:Point</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;0&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:Point</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;50&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;50&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">        &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sys:Point</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> X</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Y</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;100&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">/&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">x:Array</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Window.Resources</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="x-static" tabindex="-1"><a class="header-anchor" href="#x-static"><span>x:Static</span></a></h3><p><strong>用途</strong>：在 XAML 中引用静态字段或静态属性（类常量、静态资源键、系统颜色键等）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Static local:MyConsts.WelcomeText}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Background</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Static SystemColors.ControlBrush}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p><code>{x:Static}</code> 在 XAML 中返回那个静态值本身（不是字符串化）。</p></blockquote><h3 id="x-type" tabindex="-1"><a class="header-anchor" href="#x-type"><span>x:Type</span></a></h3><p><strong>用途</strong>：在 XAML 中获取 <code>System.Type</code> 对象（常用于 DataTemplate/DataTrigger、类型比较等）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DataTemplate</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> DataType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Type local:MyViewModel}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  ...</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">DataTemplate</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="x-null" tabindex="-1"><a class="header-anchor" href="#x-null"><span>x:Null</span></a></h3><p><strong>用途</strong>：在 XAML 中显式表示 <code>null</code>（例如把某属性设置为 null）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Setter</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Property</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;SomeProperty&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Value</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{x:Null}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="x-reference" tabindex="-1"><a class="header-anchor" href="#x-reference"><span>x:Reference</span></a></h3><p><strong>用途</strong>：引用另一个已命名元素的实例（与 <code>ElementName</code> 绑定不同，<code>x:Reference</code> 不是绑定表达式，而是直接取得引用）。</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Button</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> x:Name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;btnA&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Content</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;A&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">TextBlock</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> Text</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;{Binding Source={x:Reference btnA}, Path=Content}&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> /&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>[!note]</p><p><code>ElementName</code> 是绑定（可以更新），而 <code>x:Reference</code> 在解析时返回元素实例（某些情况下更直接，但在解析顺序上需注意）。</p><p><code>x:Reference</code> 在解析顺序上有局限，可能会出现目标尚未创建的情况导致失败。</p></blockquote><h2 id="声明clr命名空间-引用自定义类型" tabindex="-1"><a class="header-anchor" href="#声明clr命名空间-引用自定义类型"><span>声明CLR命名空间（引用自定义类型）</span></a></h2><p>当你要在 XAML 中使用自己写的控件/类，需要在根元素声明 <code>clr-namespace</code>：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xmlns:local=&quot;clr-namespace:MyApp.Controls&quot;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">&lt;!-- 或引用外部程序集 --&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xmlns:ctrl=&quot;clr-namespace:ThirdParty.Controls;assembly=ThirdParty&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>然后可以 <code>&lt;local:MyControl /&gt;</code> 直接使用。如果省略<code>assembly=</code>，则默认当前程序集。</p><h2 id="设计时命名空间-mc-d" tabindex="-1"><a class="header-anchor" href="#设计时命名空间-mc-d"><span>设计时命名空间(mc/d)</span></a></h2><p>不是 <code>x:</code>，但几乎每个 XAML 都会出现</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-xml"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xmlns:mc=&quot;http://schemas.openxmlformats.org/markup-compatibility/2006&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">xmlns:d=&quot;http://schemas.microsoft.com/expression/blend/2008&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">mc:Ignorable=&quot;d&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>mc:Ignorable=&quot;d&quot;</code> 表示设计器相关命名空间可以被忽略（不会影响运行时）。</li><li><code>d:DesignHeight</code>、<code>d:DataContext</code> 等仅用于设计时显示，不参与运行时逻辑。</li></ul><h2 id="namescope" tabindex="-1"><a class="header-anchor" href="#namescope"><span>NameScope</span></a></h2><p>XAML 中的 <code>x:Name</code> / <code>Name</code> 注册到<strong>当前的 NameScope</strong>。NameScope 有层级：</p><ul><li>Window 有独立的 namescope</li><li>DataTemplate、ControlTemplate、ResourceDictionary 会创建自己的 namescope（模板内的 x:Name 在模板实例内部可用，但不会成为 Window 的字段）</li></ul><p>常见问题：</p><ul><li>在 DataTemplate 里用 <code>x:Name=&quot;xxx&quot;</code> 后，在 Window 后台直接访问 <code>xxx</code> 会找不到 —— 这是因为模板的 namescope 与窗体不同。</li><li><code>FindName</code> 只能在对应的 namescope 中查找。</li></ul><h2 id="faq-最佳实践" tabindex="-1"><a class="header-anchor" href="#faq-最佳实践"><span>FAQ &amp; 最佳实践</span></a></h2><p>Q：<code>Name</code> 和 <code>x:Name</code> 哪个用？ A：如果控件类定义了 <code>Name</code> 属性（大多数控件都定义），写 <code>Name=&quot;...&quot;</code> 就可以；但 <code>x:Name</code> 更通用，也可用于非 UI 元素（例如动画 storyboard 的 target）。在 code-behind 生成字段时两者通常等效。</p><p>Q：什么时候用 <code>x:Key</code>？什么时候用 <code>x:Name</code>？ A：资源字典里的资源用 <code>x:Key</code> 做标识（<code>StaticResource</code>/<code>DynamicResource</code>），UI 元素用 <code>x:Name</code>/<code>Name</code> 注册 namescope。</p><p>Q：<code>{x:Static}</code> 与 <code>{StaticResource}</code> 区别？ A：<code>{x:Static}</code> 引用静态字段/属性（编译时获得值），<code>{StaticResource}</code> 从资源字典中按键查找资源（运行时解析资源字典层次）。</p><hr><ul><li>在顶层窗体或 UserControl 使用 <code>x:Class</code> 且与 code-behind 保持一致。</li><li>给需要后台访问的控件使用 <code>x:Name</code>（或 <code>Name</code>）。</li><li>资源使用 <code>x:Key</code>，并尽量把全局资源放到 <code>App.xaml</code> 或独立的 <code>ResourceDictionary</code>。</li><li>使用 <code>{x:Static}</code> 引用常量或系统键；使用 <code>{StaticResource}</code>/<code>{DynamicResource}</code> 引用资源。</li><li>注意 templates/data templates 的 namescope：不要期望模板内的 <code>x:Name</code> 会变成顶层字段。</li><li>仅在确实需要时使用 <code>x:FieldModifier</code> 或 <code>x:Shared=&quot;False&quot;</code>。</li></ul>`,106)]))}const p=i(t,[["render",l]]),r=JSON.parse('{"path":"/dotnet/wpf/xaml.html","title":"XAML","lang":"zh-CN","frontmatter":{"title":"XAML","shortTitle":"XAML","description":"XAML","date":"2025-07-12T17:36:33.000Z","categories":[".NET","WPF"],"tags":[".NET"],"author":{"name":"Okita","url":"https://zhiyun.space","email":"2368932388@qq.com"},"order":2},"git":{"createdTime":1754285395000,"updatedTime":1754905297000,"contributors":[{"name":"Okita1027","username":"Okita1027","email":"96156298+Okita1027@users.noreply.github.com","commits":2,"url":"https://github.com/Okita1027"}]},"readingTime":{"minutes":8.12,"words":2437},"filePathRelative":"dotnet/wpf/xaml.md","copyright":{"author":"Okita"}}');export{p as comp,r as data};
